plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id 'nu.studer.jooq' version '3.0.3'
    id 'org.hidetake.swagger.generator' version '2.10.0'
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.4'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "javax.annotation:javax.annotation-api"
    compile "io.micronaut.configuration:jdbc-hikari:1.0.0.RC2"
    compile "io.micronaut.configuration:micronaut-jooq:1.2.0.RC2"
    compile "org.apache.commons:commons-lang3:3.9"
    compile "javax.inject:javax.inject:1"
    compile "org.jooq:jooq:3.11.11"
    compile "com.h2database:h2:1.4.199"
    compile "io.micronaut.configuration:micronaut-flyway"
    compile "io.swagger.core.v3:swagger-annotations"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    jooqRuntime "com.h2database:h2:1.4.199"
    jooqRuntime "org.jooq:jooq-meta-extensions:3.11.11"

    swaggerUI 'org.webjars:swagger-ui:3.10.0'
}

test.classpath += configurations.developmentOnly

mainClassName = "com.andriyuk.backendtest.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
//run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Xdebug',"-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n")
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

jooq {
    version = '3.11.11'
    edition = 'OSS'
    backendtest(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:~/test;AUTO_SERVER=TRUE'
            user = 'sa'
            password = ''
        }
        generator {
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/databasemigrations/V1__schema_creation.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                }
            }
            generate {
                javaTimeTypes = true
                sequences = true
            }
            target {
                packageName = 'com.andriyuk.backendtest.db.jooq'
            }
        }
    }
}

swaggerSources {
    account {
        inputFile = file("${buildDir}/classes/java/main/META-INF/swagger/${name}-${version}.yml")
        ui.outputDir = file("${buildDir}/classes/java/main/META-INF/swagger-ui")        
    }
}
